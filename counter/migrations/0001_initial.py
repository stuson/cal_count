# Generated by Django 2.1.5 on 2019-02-10 00:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('name', models.TextField(max_length=40, primary_key=True, serialize=False)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_modified_date', models.DateField(auto_now=True)),
                ('energy', models.FloatField()),
                ('carbohydrate', models.FloatField()),
                ('protein', models.FloatField()),
                ('fat', models.FloatField()),
                ('fibre', models.FloatField()),
                ('sodium', models.FloatField()),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_by', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FoodInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('amount', models.FloatField(default=0)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='counter.Food')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FoodTag',
            fields=[
                ('tag', models.TextField(max_length='', primary_key=True, serialize=False)),
                ('food', models.ManyToManyField(to='counter.Food')),
            ],
        ),
    ]
